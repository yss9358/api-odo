<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ss">
	<!-- 쿼리문작성 -->
	<!-- <![CDATA[]]> -->
	
	<resultMap id="attenMap" type="java.util.Map">
		<result property="className" column="className"/>
		<result property="startDate" column="startDate"/>
		<result property="endDate" column="endDate"/>
		<result property="attenDate" column="attenDate"/>
		<result property="attenType" column="attenType"/>
	</resultMap>
	
	
	
	<!-- 아이디 중복확인 -->
	<select id="checkId" parameterType="String" resultType="com.javaex.vo.UserJoinVo">
		<![CDATA[
			select	user_id userId
			from user
			where user_id = #{id}
		]]>
	</select>
	
	<!-- 일반회원 회원가입 -->
	<insert id="insertUser" parameterType="com.javaex.vo.UserJoinVo">
		<![CDATA[
			insert into user
			values(null, #{userId}, #{userPw}, #{userNickname}, #{userHp}, #{userBirth}, #{userGender}, null, false, false)
		]]>
	</insert>
	
	<!-- 일반회원 로그인 -->
	<select id="loginByIdPw" parameterType="com.javaex.vo.UserJoinVo" resultType="com.javaex.vo.UserJoinVo">
		<![CDATA[
			select	user_no userNo,
					user_nickname userNickname,
					user_id userId,
					user_image userImage,
					user_kakao userKakao,
					user_naver userNaver
			from user
			where user_id = #{userId}
			and user_pw = #{userPw}
		]]>
	</select>
	
	<!-- 원데이 결제내역 가져오기 -->
	<select id="getOneDayPayListByNo" parameterType="int" resultType="com.javaex.vo.MyPayVo">
		<![CDATA[
			select	p.user_no userNo,
					c.class_type classType,
			        c.class_no classNo,
					c.class_image classImage,
			        s.end_date endDate,
			        IFNULL(w.w_class_no,0) wishClassNo,
					IFNULL(avg_review.avg_review_point,0) starScore,
					p.pay_no payNo,
			        p.pay_date payDate,
			        c.class_name className,
			        c.class_intro classIntro,
			        p.pay_price payPrice,
			        IFNULL(a.attenCount, 0) attenCount,
			        p.schedule_no scheduleNo,
			        IFNULL(r.review_no, 0) reviewNo,
			        c.class_url classUrl,
			        IFNULL(selfC.class_no,0) recClassNo,
			        selfC.class_image recClassImage,
			        selfC.class_name recClassName
			from pay p
			inner join schedule s 
					on p.schedule_no = s.schedule_no
			inner join class c
					on s.class_no = c.class_no
			left join wish_class w
					on p.user_no = w.user_no and c.class_no = w.class_no
			left join review r
					on r.user_no = p.user_no and r.schedule_no = s.schedule_no
			left join class selfC
					on c.rec_class_no = selfC.class_no
			left join (select	schedule_no,
								count(*) attenCount
						from attendance
						where atten_type = '출석'
						and user_no = #{userNo}
			            group by schedule_no) a
					on s.schedule_no = a.schedule_no
			left join (select	c.class_no,
								AVG(r.review_point) avg_review_point
						from class c
			            inner join schedule s
								on c.class_no = s.class_no
						left join review r
								on s.schedule_no = r.schedule_no
						group by c.class_no) avg_review
					on c.class_no = avg_review.class_no
			where p.user_no = #{userNo}
			and c.class_type = 1
		]]>
	</select>
	
	<!-- 정규 클래스 결제내역 가져오기 -->
	<select id="getRegularPayListByNo" parameterType="int" resultType="com.javaex.vo.MyPayVo">
		<![CDATA[
			select	p.user_no userNo,
					c.class_type classType,
			        c.class_no classNo,
					c.class_image classImage,
			        s.end_date endDate,
			        IFNULL(w.w_class_no,0) wishClassNo,
					IFNULL(avg_review.avg_review_point,0) starScore,
					p.pay_no payNo,
			        p.pay_date payDate,
			        c.class_name className,
			        c.class_intro classIntro,
			        p.pay_price payPrice,
			        IFNULL(a.attenCount, 0) attenCount,
			        p.schedule_no scheduleNo,
			        IFNULL(r.review_no, 0) reviewNo,
			        c.class_url classUrl,
			        IFNULL(selfC.class_no,0) recClassNo,
			        selfC.class_image recClassImage,
			        selfC.class_name recClassName
			from pay p
			inner join schedule s 
					on p.schedule_no = s.schedule_no
			inner join class c
					on s.class_no = c.class_no
			left join wish_class w
					on p.user_no = w.user_no and c.class_no = w.class_no
			left join review r
					on r.user_no = p.user_no and r.schedule_no = s.schedule_no
			left join class selfC
					on c.rec_class_no = selfC.class_no
			left join (select	schedule_no,
								count(*) attenCount
						from attendance
						where atten_type = '출석'
						and user_no = #{userNo}
			            group by schedule_no) a
					on s.schedule_no = a.schedule_no
			left join (select	c.class_no,
								AVG(r.review_point) avg_review_point
						from class c
			            inner join schedule s
								on c.class_no = s.class_no
						left join review r
								on s.schedule_no = r.schedule_no
						group by c.class_no) avg_review
					on c.class_no = avg_review.class_no
			where p.user_no = #{userNo}
			and c.class_type <> 1
		]]>
	</select>
	
	<!-- 리뷰쓸때 클래스 한개 데이터 가져오기 -->
	<select id="getClassOne" parameterType="int" resultType="com.javaex.vo.OneClassVo">
		<![CDATA[
			select	c.class_no classNo,
					c.class_image classImage,
					c.class_name className,
			        c.class_intro classIntro,
			        c.class_type classType,
					s.schedule_no scheduleNo,
					s.start_date startDate, 
					s.end_date endDate
			from schedule s
			inner join class c
					on s.class_no = c.class_no
			where s.schedule_no = #{no}
		]]>
	</select>
	
	<!-- 리뷰 작성 -->
	<insert id="insertReview" parameterType="com.javaex.vo.ReviewVo">
		<![CDATA[
			insert into review
			values(null, #{scheduleNo}, #{userNo}, #{reviewImage}, #{reviewPoint}, #{reviewContent}, #{reviewQ1}, #{reviewQ2}, #{reviewQ3}, now())
		]]>
	</insert>
	
	<!-- 출석정보 가져오기 -->
	<select id="getAttenList" parameterType="map" resultMap="attenMap">
		<![CDATA[
			select  a.atten_date attenDate,
					a.atten_type attenType
			from attendance a
			inner join schedule s
					on s.schedule_no = a.schedule_no
			inner join class c
					on c.class_no = s.class_no
			where s.schedule_no = #{scheduleNo}
			and a.user_no = #{userNo}
			order by atten_date desc
		]]>
	</select>
	
	<!-- 회원의 쿠폰정보 가져오기 -->
	<select id="getCouponByNo" parameterType="int" resultType="com.javaex.vo.CouponVo">
		<![CDATA[
			select	c.coupon_no couponNo,
					c.user_no userNo,
			        cp.company_name companyName,
			        c.coupon_price couponPrice,
			        c.coupon_date couponDate
			from coupon c, user u, company cp
			where c.user_no = u.user_no
			and c.company_no = cp.company_no
			and u.user_no = #{no}
		]]>
	</select>

</mapper>