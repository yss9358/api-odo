<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hs">


	<!-- 클래스 상세 정보 가져오기 -->
	<select id="selectNameAdd" parameterType="int" resultType="String">
   <![CDATA[
		select  class_name_address classNameAdd
		from class
		where class_no = #{no}
   ]]>
	</select>

	<!-- 해당클래스 후기 수 가져오기 -->
	<select id="selectClassReviwCnt" parameterType="int" resultType="int">
   <![CDATA[
		select count(*) count
		from class c
		join schedule sch on c.class_no = sch.class_no
		join review r on sch.schedule_no = r.schedule_no
		where c.class_no = #{no}
   ]]>
	</select>

	<!-- 해당클래스 후기 리스트 가져오기 -->
	<select id="selectClassReviewList" parameterType="int" resultType="com.javaex.vo.ClassDetailVo">
   <![CDATA[
		select  r.review_image reviewImg,
				u.user_no userNo,
				u.user_image userImg,
		        u.user_nickname userNickname,
		        r.review_point reviewPoint,
		        r.review_content reviewContent,
		        r.review_no reviewNo
		from class c
		join schedule sch on c.class_no = sch.class_no
		join review r on sch.schedule_no = r.schedule_no
		join user u on r.user_no = u.user_no
		where c.class_no = #{no}
		order by review_no desc
		limit 4;
   ]]>
	</select>

	<!-- 해당클래스 운영회사 후기 수 가져오기 -->
	<select id="selectComWishCnt" parameterType="int" resultType="int">
   <![CDATA[
		select count(*) count
		from company com
		join wish_company wc on com.company_no = wc.company_no
		where com.company_no = #{no}
   ]]>
	</select>

	<!-- 해당클래스 운영회사 후기 수 가져오기 -->
	<select id="selectComReviewCnt" parameterType="int" resultType="int">
   <![CDATA[
		SELECT count(*) count
		FROM company AS com
		JOIN class AS cl ON com.company_no = cl.company_no
		JOIN schedule as sch on cl.class_no = sch.class_no
		join review as re on sch.schedule_no = re.schedule_no
		where com.company_no = #{no}
   ]]>
	</select>

	<!-- 해당클래스 운영회사 클래스 수 가져오기 -->
	<select id="selectComClassCnt" parameterType="int" resultType="int">
   <![CDATA[
		select count(*) count
		from company com join class cl
		where com.company_no = cl.company_no
		and com.company_no = #{no}
   ]]>
	</select>

	<!-- 해당클래스 운영회사 정보 가져오기 -->
	<select id="selectComInfo" parameterType="int" resultType="com.javaex.vo.ClassDetailVo">
   <![CDATA[
		select  company_image companyImg,
				company_name companyName
		from company
		where company_no = #{no}
   ]]>
	</select>

	<!-- 클래스 스케줄 리스트 가져오기 -->
	<select id="selectScheduleList" parameterType="int" resultType="com.javaex.vo.ClassDetailVo">
   <![CDATA[
		select  sch.schedule_no scheduleNo,
		      sch.start_date startDate,
		      sch.end_date endDate
		from schedule sch
		join class c on sch.class_no = c.class_no
		where c.class_no = #{no}
   ]]>
	</select>

	<!-- 클래스 상세 정보 가져오기 -->
	<select id="selectClassDetail" parameterType="int" resultType="com.javaex.vo.ClassDetailVo">
   <![CDATA[
		select  cl.class_image classImg,
				cl.class_name className,
		        cl.class_price classPrice,
		        cl.class_intro classIntro,
		        cl.class_info classInfo,
		        cl.class_name_address classNameAdd,
		        cl.class_detail_address classDetailAdd,
		        com.company_no companyNo
		from class cl 
		join company com 
		on cl.company_no = com.company_no 
		where cl.class_no = #{no}
   ]]>
	</select>

	<!-- ==============카테고리검색페이지============= -->

	<!-- 2차카테고리 리스트 가져오기 -->
	<select id="selectCate2List" parameterType="map" resultType="com.javaex.vo.HsVo">
   <![CDATA[
   	   select   c.class_no classNo,
		        c.class_name className,
		        substr(c.class_name_address, 1, 5) classNameAdd,
		        c.class_image classImg,
		        c.class_price classPrice,
		        round(avg(r.review_point)) reviewPointAvg,
		        count(r.review_point) reviewCount
		from class c
		join cate2 c2 on c.cate2_no = c2.cate2_no
		left join schedule sch on c.class_no = sch.class_no
		left join review r on sch.schedule_no = r.schedule_no
		where c2.cate2_no = #{cate2No}
		group by c.class_no, c.class_name, c.class_name_address, c.class_image, c.class_price
		order by avg(r.review_point) desc
		limit #{startRowNo}, #{listCnt}
   ]]>
	</select>

	<!-- 전체 글갯수 -->
	<select id="selectTotalCnt2" parameterType="int" resultType="int">
		<![CDATA[
			select count(*) count
			from class c join cate2 c2 join cate1 c1
			where c.cate2_no = c2.cate2_no 
			and c2.cate1_no = c1.cate1_no
			and c2.cate2_no = #{no}
		]]>
	</select>

	<!-- 전체 글갯수 -->
	<select id="selectTotalCnt" parameterType="int" resultType="int">
		<![CDATA[
			select count(*) count
			from class c join cate2 c2 join cate1 c1
			where c.cate2_no = c2.cate2_no 
			and c2.cate1_no = c1.cate1_no
			and c1.cate1_no = #{no}
		]]>
	</select>

	<!-- 1차카테고리 리스트 가져오기 -->
	<select id="selectCate1List" parameterType="map" resultType="com.javaex.vo.HsVo">
   <![CDATA[
	   select   c.class_no classNo,
		        c.class_name className,
		        substr(c.class_name_address, 1, 5) classNameAdd,
		        c.class_image classImg,
		        c.class_price classPrice,
		        round(avg(r.review_point)) reviewPointAvg,
		        count(r.review_point) reviewCount
		from class c
		join cate2 c2 on c.cate2_no = c2.cate2_no
		join cate1 c1 on c2.cate1_no = c1.cate1_no
		left join schedule sch on c.class_no = sch.class_no
		left join review r on sch.schedule_no = r.schedule_no
		where c1.cate1_no = #{cate1No}
		group by c.class_no, c.class_name, c.class_name_address, c.class_image, c.class_price
		order by avg(r.review_point) desc
		limit #{startRowNo}, #{listCnt}
   ]]>
	</select>

	<!-- ==============메인뷰============= -->

	<!-- 무료베스트 리스트 가져오기 - 로그인 -->
	<select id="selectUsersFreeBestList" parameterType="int" resultType="com.javaex.vo.HsVo">
   <![CDATA[
		SELECT
		    c.class_no AS classNo,
		    c.class_name AS className,
		    SUBSTR(c.class_name_address, 1, 5) AS classNameAdd,
		    c.class_image AS classImg,
		    c.class_price AS classPrice,
		    ROUND(AVG(r.review_point)) AS reviewPointAvg,
		    COUNT(r.review_point) AS reviewCount,
		    COALESCE(w.user_no, 0) AS userNo,
		    CASE
		        WHEN COALESCE(w.user_no, 0) = #{no} THEN 1
		        ELSE 0
		    END AS isWish
		FROM class c
		LEFT JOIN (
		    SELECT class_no, MIN(user_no) AS user_no
		    FROM wish_class
		    GROUP BY class_no
		) w ON c.class_no = w.class_no
		LEFT JOIN schedule sch ON c.class_no = sch.class_no
		LEFT JOIN review r ON sch.schedule_no = r.schedule_no
		WHERE c.class_price = 0
		GROUP BY c.class_no, c.class_name, c.class_name_address, c.class_image, c.class_price, w.user_no
		ORDER BY AVG(r.review_point) DESC
		LIMIT 4
   ]]>
	</select>

	<!-- 무료베스트 리스트 가져오기 - 비로그인 -->
	<select id="selectFreeBestList" resultType="com.javaex.vo.HsVo">
   <![CDATA[
		select c.class_no classNo,
			   c.class_name className,
			   substr(c.class_name_address, 1, 5) classNameAdd,
			   c.class_image classImg,
			   c.class_price classPrice,
			   round(avg(r.review_point)) reviewPointAvg,
			   count(r.review_point) reviewCount
		from class c
		left join schedule sch on c.class_no = sch.class_no
		left join review r on sch.schedule_no = r.schedule_no
		where class_price = 0
		group by c.class_no, c.class_name, c.class_name_address, c.class_image, c.class_price
		order by avg(r.review_point) desc
		limit 4
   ]]>
	</select>

	<!-- 유료베스트 리스트 가져오기 - 로그인 -->
	<select id="selectUsersPayBestList" parameterType="int" resultType="com.javaex.vo.HsVo">
   <![CDATA[
		SELECT
		    c.class_no AS classNo,
		    c.class_name AS className,
		    SUBSTR(c.class_name_address, 1, 5) AS classNameAdd,
		    c.class_image AS classImg,
		    c.class_price AS classPrice,
		    ROUND(AVG(r.review_point)) AS reviewPointAvg,
		    COUNT(r.review_point) AS reviewCount,
		    COALESCE(w.user_no, 0) AS userNo,
		    CASE
		        WHEN COALESCE(w.user_no, 0) = #{no} THEN true
		        ELSE false
		    END AS isWish
		FROM class c
		LEFT JOIN schedule sch ON c.class_no = sch.class_no
		LEFT JOIN review r ON sch.schedule_no = r.schedule_no
		LEFT JOIN (
		    SELECT class_no, MIN(user_no) AS user_no
		    FROM wish_class
		    GROUP BY class_no
		) w ON c.class_no = w.class_no
		WHERE c.class_price != 0
		GROUP BY c.class_no, c.class_name, c.class_name_address, c.class_image, c.class_price, w.user_no
		ORDER BY AVG(r.review_point) DESC
		LIMIT 4;
   ]]>
	</select>

	<!-- 유료베스트 리스트 가져오기 - 비로그인 -->
	<select id="selectPayBestList" resultType="com.javaex.vo.HsVo">
   <![CDATA[
		select c.class_no classNo,
			   c.class_name className,
			   substr(c.class_name_address, 1, 5) classNameAdd,
			   c.class_image classImg,
			   c.class_price classPrice,
			   round(avg(r.review_point)) reviewPointAvg,
			   count(r.review_point) reviewCount
		from class c
		left join schedule sch on c.class_no = sch.class_no
		left join review r on sch.schedule_no = r.schedule_no
		where class_price != 0
		group by c.class_no, c.class_name, c.class_name_address, c.class_image, c.class_price
		order by avg(r.review_point) desc
		limit 4
   ]]>
	</select>

	<!-- 신규 리스트 가져오기 - 로그인 -->
	<select id="selectUsersNewList" parameterType="int" resultType="com.javaex.vo.HsVo">
   <![CDATA[
		SELECT
		    c.class_no AS classNo,
		    c.class_name AS className,
		    SUBSTR(c.class_name_address, 1, 5) AS classNameAdd,
		    c.class_image AS classImg,
		    c.class_price AS classPrice,
		    COALESCE(w.user_no, 0) AS userNo,
		    CASE
		        WHEN COALESCE(w.user_no, 0) = #{no} THEN true
		        ELSE false
		    END AS isWish,
		    ROUND(AVG(r.review_point)) AS reviewPointAvg,
		    COUNT(r.review_point) AS reviewCount
		FROM class c
		LEFT JOIN (
		    SELECT class_no, MIN(user_no) AS user_no
		    FROM wish_class
		    GROUP BY class_no
		) w ON c.class_no = w.class_no
		LEFT JOIN schedule sch ON c.class_no = sch.class_no
		LEFT JOIN review r ON sch.schedule_no = r.schedule_no
		GROUP BY c.class_no, c.class_name, c.class_name_address, c.class_image, c.class_price, w.user_no
		ORDER BY c.class_no DESC
		LIMIT 0, 4
   ]]>
	</select>

	<!-- 신규 리스트 가져오기 - 비로그인 -->
	<select id="selectNewList" resultType="com.javaex.vo.HsVo">
   <![CDATA[
	   select c.class_no classNo,
		       c.class_name className,
		       substr(c.class_name_address, 1, 5) classNameAdd,
		       c.class_image classImg,
		       c.class_price classPrice,
		       round(avg(r.review_point)) reviewPointAvg,
		       count(r.review_point) reviewCount
		from class c
		left join schedule sch on c.class_no = sch.class_no
		left join review r on sch.schedule_no = r.schedule_no
		group by c.class_no, c.class_name, c.class_name_address, c.class_image, c.class_price
		order by c.class_no desc
		limit 0, 4
   ]]>
	</select>


</mapper>